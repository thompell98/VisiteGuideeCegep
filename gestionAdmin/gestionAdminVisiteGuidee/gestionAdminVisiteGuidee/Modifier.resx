<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonRetour.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7jAAAAAASUVORK5CYII=
</value>
  </data>
</root>